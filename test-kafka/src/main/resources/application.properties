server.port=8081
spring.kafka.bootstrap-servers=172.16.211.77:9092
# 生产者
# 发送失败时，重试发送的次数
spring.kafka.producer.retries=3
# 0-不应答。1-leader 应答。all-所有 leader 和 follower 应答。
spring.kafka.producer.acks=1
# 批量大小 16K=16*1024
spring.kafka.producer.batch-size=16384
# 生产端缓冲区大小 32M=1024*1024*32
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 自定义分区器
# spring.kafka.producer.properties.partitioner.class=com.kafka.test.producer.CustomizePartitioner
# 消费者
# 指定默认消费者group id
spring.kafka.consumer.group-id=test
# 是否自动提交offset
spring.kafka.consumer.enable-auto-commit=false
# 提交offset延时(接收到消息后多久提交offset)
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.max-poll-records=100
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.max.poll.interval.ms=300000
#spring.kafka.consumer.properties.session.timeout.ms=60000
#spring.kafka.consumer.properties.heartbeat.interval.ms=3000
# listener类型为批量batch类型（默认为single单条消费模式）
spring.kafka.listener.type=batch
# 消费者的线程数 最佳一个线程消费一个分区
spring.kafka.listener.concurrency=2
# 消费端监听的topic不存在时，项目启动会报错(关掉)
spring.kafka.listener.missing-topics-fatal=false
# 手动提交
spring.kafka.listener.ack-mode=manual
